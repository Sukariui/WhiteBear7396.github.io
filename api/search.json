[{"id":"17e2ea16e63d7827756bdefe317171c7","title":"Hexo版本升级","content":"Hexo版本升级查看当前版本\nhexo -v\n\n升级Hexo使用淘宝源的 cnpm 替换 npm\nnpm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org\n\ncnpm install -g cnpm                 # 升级 npm\ncnpm cache clean -f                 # 清除 npm 缓存\n\n&#x3D;&#x3D;&#x3D;更新 hexo: 进入 blog 目录，执行如下命令&#x3D;&#x3D;&#x3D;\n# 更新 package.json 中的 hexo 及个插件版本\ncnpm install -g npm-check           # 检查之前安装的插件，都有哪些是可以升级的\ncnpm install -g npm-upgrade         # 升级系统中的插件\nnpm-check\nnpm-upgrade\n\n# 更新 hexo 及所有插件\ncnpm update\n\n# 确认 hexo 已经更新\nhexo -v\n","slug":"programme/Hexo/2021-04-22-Hexo版本升级","date":"2021-04-27T05:20:52.000Z","categories_index":"程序汇编语言","tags_index":"Hexo,编程","author_index":"Narges"},{"id":"58ee1c4fc8ad220a965286e9827ebd83","title":"Python制作图形界面","content":"制作网页上传工具目的\n制作这个脚本是为了学习Python的gui图形界面，脚本之前我也已经使用按键精灵制作过，当时是因为手上没有合适的可以快速上手的语言，只好先用按键精灵写一个，使用什么语言和工具都是无关紧要的，只要达到使用目的就行，如今回头希望再使用Python写一个，顺便复习一下。\n\n过程预览图及exe文件先放出源码及成品看一下吧下载链接\n#从tkinter导入TK\nfrom tkinter import *\n\n#初始化TK\nmyWindow &#x3D; Tk()\n\n#设置标题和大小，一开始大小我用*报错，后来发现要用英文字母x\nmyWindow.title(&#39;关键词上传工具&#39;)\nwidth &#x3D; 600\nheight &#x3D; 300\n\n#设置窗口出现位置\nscreen_width &#x3D; myWindow.winfo_screenwidth()\nscreen_height &#x3D; myWindow.winfo_screenheight()\nalignstr &#x3D; &#39;%dx%d+%d+%d&#39; % (width, height, (screen_width)&#x2F;3, (screen_height)&#x2F;4) #因为我的任务栏是在左侧所以会有一点偏差，可以自己调整，计算一下就好\nmyWindow.geometry(alignstr)\n\n#设置窗口是否可以伸缩大小\nmyWindow.resizable(width&#x3D;True, height&#x3D;True)\n\n#创建关键词文本框\nkeyWord_1 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_1.grid(row&#x3D;5, column&#x3D;1, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_1_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词1&#39;)\nkeyWord_1_label.grid(row&#x3D;5, column&#x3D;0, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nkeyWord_2 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_2.grid(row&#x3D;10, column&#x3D;1, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_2_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词2&#39;)\nkeyWord_2_label.grid(row&#x3D;10, column&#x3D;0, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nkeyWord_3 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_3.grid(row&#x3D;15, column&#x3D;1, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_3_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词3&#39;)\nkeyWord_3_label.grid(row&#x3D;15, column&#x3D;0, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nkeyWord_4 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_4.grid(row&#x3D;20, column&#x3D;1, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_4_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词4&#39;)\nkeyWord_4_label.grid(row&#x3D;20, column&#x3D;0, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nkeyWord_5 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_5.grid(row&#x3D;25, column&#x3D;1, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_5_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词5&#39;)\nkeyWord_5_label.grid(row&#x3D;25, column&#x3D;0, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nkeyWord_6 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_6.grid(row&#x3D;5, column&#x3D;3, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_6_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词6&#39;)\nkeyWord_6_label.grid(row&#x3D;5, column&#x3D;2, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nkeyWord_7 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_7.grid(row&#x3D;10, column&#x3D;3, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_7_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词7&#39;)\nkeyWord_7_label.grid(row&#x3D;10, column&#x3D;2, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nkeyWord_8 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_8.grid(row&#x3D;15, column&#x3D;3, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_8_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词8&#39;)\nkeyWord_8_label.grid(row&#x3D;15, column&#x3D;2, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n\nkeyWord_9 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_9.grid(row&#x3D;20, column&#x3D;3, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_9_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词9&#39;)\nkeyWord_9_label.grid(row&#x3D;20, column&#x3D;2, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n\nkeyWord_10 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_10.grid(row&#x3D;25, column&#x3D;3, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_10_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词10&#39;)\nkeyWord_10_label.grid(row&#x3D;25, column&#x3D;2, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n\nkeyWord_11 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_11.grid(row&#x3D;5, column&#x3D;5, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_11_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词11&#39;)\nkeyWord_11_label.grid(row&#x3D;5, column&#x3D;4, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n\nkeyWord_12 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_12.grid(row&#x3D;10, column&#x3D;5, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_12_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词12&#39;)\nkeyWord_12_label.grid(row&#x3D;10, column&#x3D;4, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n\nkeyWord_13 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_13.grid(row&#x3D;15, column&#x3D;5, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_13_label &#x3D; Label(myWindow, text&#x3D;&#39;关键词13&#39;)\nkeyWord_13_label.grid(row&#x3D;15, column&#x3D;4, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n\nkeyWord_14 &#x3D; Entry(myWindow, width&#x3D;15)\nkeyWord_14.grid(row&#x3D;20, column&#x3D;5, sticky&#x3D;W, padx&#x3D;0, pady&#x3D;0)\nkeyWord_14_label &#x3D; Label(myWindow, text&#x3D;&#39;主体&#39;)\nkeyWord_14_label.grid(row&#x3D;20, column&#x3D;4, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n#创建开始按钮\nstart &#x3D; Button(myWindow, text&#x3D;&#39;start&#39;, relief&#x3D;&#39;ridge&#39;, width&#x3D;8, height&#x3D; 4)\nstart.grid(row&#x3D;0, column&#x3D;0, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\nstop &#x3D; Button(myWindow, text&#x3D;&#39;stop&#39;, relief&#x3D;&#39;ridge&#39;, width&#x3D;8, height&#x3D;4)\nstop.grid(row&#x3D;0, column&#x3D;1, sticky&#x3D;W, padx&#x3D;5, pady&#x3D;5)\n\n#进入消息循环\nmyWindow.mainloop()\n\n知识点","slug":"2021-4.26-python制作图形界面","date":"2021-04-26T08:38:38.000Z","categories_index":"programme","tags_index":"Python,脚本","author_index":"Narges"},{"id":"c8f5e5d287a82c24b2fafca4e58880d9","title":"第3篇-notion上手推荐","content":"前言说到笔记应用和协作工具，Evernote、OneNote、Google Doc、Quip……还有一众国内笔记应用，都在争夺着用户设备上的一席之地。然而纵使竞争再激烈，这个领域也从不缺乏挑战者，Notion 绝对是一款前所未见的笔记协作工具。\n或许许多人不知道，Notion 的创始人 Ivan 是一位中国人，他在五六年前创立了 Notion。曾因一个版本的 Notion 不够稳定，解雇了全公司的员工。之后与联合创始人搬去了日本京都从头编程，才有了如今的 Notion。\nNotion 是一款将笔记、知识库和任务管理整合的协作工具。将笔记、任务管理及知识库相结合，Notion 打造出了一款「瑞士军刀」般的协作工具： Notion 不仅是一款全平台、设计还不错的文档工具，更是在 2.0 版本加入了对表格、看板和日历等功能的支持，真正成为了一款结合文档、知识库以及任务管理功能的全能协作工具\n经过了几年时间的考验，这款工具在许多方面都得到了进一步优化，越来越多的国内用户也开始上手这款应用，受到了许多人的喜爱。但不少用户苦于没有一份完整的中文教程做参考。或许你曾被许多人推荐过 Notion，但却不知道从何下手。又或者你已经上手了 Notion，却碍于想象力不知如何挖掘它的潜力。这篇会从基础功能到应用实例，帮你快速上手 Notion。\nNotion：All in One 的协作平台将 Notion 直译成中文，是「概念、观念」的意思。不同于大部分笔记应用的笔记本 + 笔记 + 标签，也不同于 Markdown 编辑器或是富文本编辑器。Notion 最具创造性的地方就在于推翻了用户脑子里对笔记应用的刻板印象，从头设计了一套仿佛来自未来的页面、编辑器、表格，分别对应着 Page、Block、Database，这三个部分，无论在哪个领域都算得上是独家功能，确实对得起它的名字。\n我们通常向别人介绍 Notion 时会说它是一款「笔记应用」，但在我深入使用过后，我觉得它已经远远超出了「笔记应用」的范畴。要是简单的罗列一下功能：编辑器、看板、数据库、多人协作，是不是有点像 Word + Trello + Airtable 的组合？\n而官方提供的使用模板就更多了：团队 Wiki、待办事项、笔记和草稿、设计规范、阅读清单、每周议程、团队日历……甚至是路线图，你都可以在 Notion 里完成。正如官方给它的定义：一款「将笔记、知识库和任务管理无缝整合的协作平台」。\n基础功能Pages：兼任笔记和笔记本Notion 的内容单位为「页」(Page)，你可以将 Notion 中的页面理解为传统笔记工具中的一条笔记。不同的是，Notion 中的页面支持无限层级，相当于有了类似于文件夹的功能，我们又能在 Notion 的每个页面中记录笔记。可以说，Pages 既是笔记、又是笔记本。\n无限层级传统的笔记应用以「笔记」和「笔记本」来区分「文件」和「文件夹」。\n以印象笔记为例，它的 笔记本组、笔记本、笔记 设计，最多只支持三个层级。层级之外还有标签来联系笔记。最大特点是笔记本只能存储笔记列表，笔记中存储文本。\nNotion 则采用了无限层级 Pages 设计，有下面几个特点：\n\n每一个 Page 中都可以正常书写内容。\n如果需要嵌套关系时，可以让一个 Page 中包含多个 Page。\nNotion 没有标签体系，通过 /Link to Page 来实现 Pages 之间的跳转，或用 /Create Linked Database 来连接到数据库。\n\n为了方便大家理解，可以把它的每个 Page 当成「档案袋」，你可以直接往档案袋上写字（直接书写）、往档案袋里放一些新的 Page 信纸（形成嵌套关系），也可以把所有的东西塞进一个大档案袋（更多嵌套层级）。\n美观为先每个 Page 从上往下依次有名称、封面、Emoji、标题、评论和正文这 6 个部分组成。\n每个页面都有一个名称，当你将页面分享出去时，这个名称就是网页的标题。官方提供了一些封面，也可以自己上传。Emoji 在不同的系统下有不同的显示，图中的 Emoji 就是在 Windows 下的表现。\n在右上角的 … 中可以调整文字的风格，支持中文，Default 是宋体，Serif 是楷体，Mono 是微软雅黑。Small Text 会让字体小一号，Full Width 则是宽屏模式，这两个选项可以让页面显示更多的内容。\n分享权限Notion 支持页面公开分享，有两种级别可选：允许评论和仅允许阅读。然后复制 Page Link 即可让所有人访问这个页面。\n如果需要和别人协作，则需要在 Invite a Person 中输入协作者的邮箱，邀请他们加入文档。有四种级别可选：全部权限、允许修改、允许评论、允许阅读。分享后，该 Page 的子页面也会被一同分享出去。\n换句话说，只要你愿意，也可以把 Notion 的页面当作一个产品展示页面分享出去。\n你需要掌握这些快捷键：在 Notion 中有许多页面，为了在这些页面中也能进行快速操作，就需要掌握一些快捷键：\n页面操作\n\nCtrl + N：创建新页面\nCtrl + Shift + N ：打开一个新的 Notion 窗口\nCtrl + P ：快速查找页面（可用于快速跳转到其他页面）\nCtrl + [ ：返回上一页\nCtrl + ] ：进入下一页\nCtrl + U ：转到父页面\nCtrl + Shift + L ：切换黑暗模式\nCtrl + \\ ：打开 / 关闭侧边栏\nCtrl + Shift + P（仅适用于创建新页面时）：用于选择添加页面的位置\n\n好了，理解了 Pages 的基本概念，我们终于要进入本文的重点：编辑器。\nNotion 页面支持「允许评论」「只读」2 种分享方式，在页面右上角设置页面权限之后，我们就可以复制页面的链接分享给其他人查看了。我们还可以输入其他人的邮箱，邀请其他人加入页面进行编辑。\nBlock Editor：块状的动态编辑器Notion 采用了独具一格的块状动态编辑器。\n从编辑角度来看，它本质上是一个介于 Markdown 和富文本之间的编辑器。它有着富文本的所见即所得的特点，便于排版；又具有 Markdown 的许多特性且可以直接使用部分 Markdown 语法，适合编辑。\n从排版角度来看，它的内容都是由许许多多 Block 组成的。一段文字是一个 Block、一张图片是一个 Block、一个列表是一个大 Block 里套着许多小 Block。\n从视觉角度来看，它的最终结果可以直接作为展示内容，并通过动态的 Block 来实现 Word 和 Markdown 编辑器无法显示的效果。\n另外，Notion 的编辑器还支持「嵌入模块」(Embed Block)，我们可以在页面中嵌入来自其它网站或者服务的内容，比如一条推文、Google Map 的位置地图等，由于 Notion 只是提取了嵌入网页的信息进行显示，只要嵌入网页中的内容发生变化，Notion 页面中的显示内容会同步进行更新，我们甚至可以在 Notion 页面中直接于其它网页中的内容进行交互，比如在 Notion 中直接查看和缩放 Google Map 中的位置和地图信息。\n强大的 Block编辑器中的 Block 分为 5 类，可以在每段的开头输入 / 并输入 Block 的名字，来快速使用它们：\n\nBasic ：基础类型的 Block。新建标题、引用、列表等类 Markdown 格式都属于 Basic Block。新建页面（/Page）也在此列。\nDatabase：数据库类型的 Block。与多数人理解的表格不同，Notion 中的 Database 更接近于数据库，你可以创建一个单独的 Database 页面（Full Page），也可以在一个页面中插入 Database（Inline）然后在其他地方调用其中的数据（Linked Database）。\nMedia：多媒体附件统称为 Media Block。图片、视频、音频、代码框、网页书签、文件附件都在此列。\nEmbeds：动态的网络服务是 Embeds Block。支持插入 Google Drive、Tweet、Github Gist 等网络服务的动态页面。\nAdvanced：高级模块。目前有 3 种：TeX 公式、新建自定义模板、当前路径。\n\n这么一看是不是很复杂？在实际使用中，你不必在意到底用什么 Block，需要用到的时候 Notion 会自动识别链接插入相关的 Block。当你从外部粘贴一个网址进来时，就会自动提示是否转为 Web Bookmark，图片和文件同理。\n我们在 Notion 中使用最频繁的是 Basic 和 Database，接着就是 Media 中的网页书签和图片，体验上和在普通编辑器中插入图片没有什么区别。\nBlock 的另一个特点是便于统一调整，把鼠标放在 Block 前面，拖动六个点的图标可以改变顺序，拖动时按住 Option / Alt 键可以复制。按下则是改变 Block 的类型和样式。用鼠标框选就可以直接选中多个 Block，进行批量拖拽。\n问题也有不少，Block 内不能单独调整文字的颜色和样式，只能统一调整。这种形式带来的好处和劣势，下面就会有专门讨论，这里暂且不提。\n动态的编辑器普通的 Markdown 编辑器通常是不支持动态内容的，一个纯文本编辑器，一个静态的浏览页面，再也没有其他东西了。\n而 Notion 的编辑器不一样，它的 Media、Embeds、Advenced 模块都是动态的，你可以往编辑器里直接放一个视频、放 Google 地图、放一个自定义模板。然后在编辑器里点击它们、与它们交互。\n举几个例子，Toggle List，输入 &gt; 或是 /toggle 再回车，生成一个可以折叠的列表；Video Block，可以添加一个视频文件直接播放；PDF Block，可以插入一个 PDF 文件预览……浏览的界面可大可小，可以为它们添加备注，也可以点右上角的 Original 查看原文件。\n其中最令人称道的是支持直接插入特定区域的 Google Maps 网页，Google Maps Block 不像其他编辑器只能贴一张图片，而是从 Google Maps 挖了一块贴在了编辑器里，放大缩小、卫星地图、星标保存、规划路线都能直接完成，一篇笔记中还能添加多个 Maps Block。在 PC 端完成旅游规划编辑，手机端查看、缩放完整版的地图。这在其他应用中是不可想象的。仅凭这一项优势，就从根本上完爆了其他所有的旅行规划工具。\n总之，这些动态功能在 Markdown 和 Word 中是无法实现的。在 Notion 的编辑器里，你更像是在编辑一个网页，随意组织串联各种内容、文件、服务，我称之为动态编辑器。\nMarkdown + 富文本，有得有失作为网站编辑，Markdown 编辑器一直都是我的首选，Word 的打开次数非常低。这是由于我不需要为文章调整特殊的样式、特殊的字体、不一样的字体颜色……直到有一天，有人跟我抱怨 Markdown 怎么连个居中都做不到。我才顿悟，无论 Markdown 有多少优点，它也无法替代一些特定的工作——它的能力本来就是有限的。\n但在 Word 中，我又会深刻地感受到 Markdown 给我带来的便利。一个不注意，文本的样式就改变了。想要写一篇符合格式的论文，你需要多次调整文本的样式、标题层级、字体、字体大小。用上了格式刷和自定义格式也不见得方便多少——它太复杂了。\n而 Notion 很巧妙地结合了两者的优点，各删去了一些功能，从而在 Markdown 和富文本之间找到了一个平衡点，一款全新的编辑器诞生了。\n这里介绍一下 Notion 编辑器与它们的异同。\nMarkdown 方面的调整Notion 对 Markdown 编辑的支持并不完整（主要是标题级别），但它支持 Markdown 文件的导入和直接复制。\nMarkdown 标记：使用  、*、**` 时需要先打字，再标记。同时需要在文字前加上一个空格才会生效。（这可能和中文输入环境有关系，将来或许会改进）\n不支持表格：Notion 取消这一点改用 Database 是一次合理的改进，毕竟 Markdown 形式的表格难用是有目共睹的。\n仅支持一级标题和二级标题：也就是只能用 # 和 ## ，### 之后就不能用了。这在官方文档中被描述为「标题」和「子标题」。我个人的解读是官方觉得超过三级的标题就可以用新开一个 Page 来完成了，但在习惯使用 Markdown 语法之后，这确实是个挺影响体验的问题。\n引用由 &gt; 变成了 &quot; ：&gt; 变成了一个 Toggle List，也就是折叠列表，而引用则变成了 &quot;。此外，在段落的开头输入 [] 可以创建待办事项。无序列表和有序列表则与普通 Markdown 没有区别。\n富文本方面的小加成Notion 还谨慎地支持了一小部分类似富文本的功能，这让 Markdown 中无法实现的许多功能也在 Notion 中实现了。\n所见即所得：Notion 直接砍掉了 Markdown 的预览模式，而所见即所得一直都是富文本的特征。\n多功能拖放：Block 的最大好处可能就是拖拽了，上面已经讲过 Block 的拖拽方法。\n允许分列：这是 Word 中比较的独特功能，在 Notion 中可以通过拖拽来快速实现列宽。仅限 PC 端，移动端查看时按顺序显示。\n字体颜色和背景色：给 Block 的文字或是背景上色，来突出一些内容（不能同时生效）。\n全文件类型支持：想在笔记中插入其他附件时，普通 Markdown 编辑器通常只支持图片。而 Notion 编辑器支持图片、视频、音频、代码、网页书签、文件，而且每一样的体验都做的很不错。\n关于图床Notion 有自己的图床，不支持自定义。用到图片时可能有两种情况：\n\n如果从本地上传文件，会把原图上传到 Notion 的图床。导出 Markdown 文件时，Markdown 中引用的是图片的相对地址，图片会被一起打包进压缩包。\n如果从链接粘贴图片，会直接使用图片原链接。导出 Markdown 文件时，Markdown 中会直接引用图片原地址，不会打包进压缩包。\n\n所以大家自己在写作时，我推荐免费用户完全使用外部图床，节省容量空间；推荐付费用户从本地直接上传到 Notion 的图床，导出功能很完善。\n你需要掌握这些快捷键：Block 除了可以通过鼠标操作，还可以用这些快捷键来调整 Block（macOS 下将 Ctrl 替换为 Commend）：\n选取 Block\nEsc 键：选中当前编辑的 Block，逻辑是退出编辑，进入 Block 操作。\nShift 键：多选 Block\n选中 Block 时，↑ ↓ ← → 方向键：上下选取 Block\n选中 Block 时，Ctrl + A：全选所有的 Block\n\n对 Block 操作\n选中 Block 时，Ctrl + D：复制一份 Block。\n选中 Block 时，Ctrl + Enter：激活，可以用于按钮、选中、切换待办事项、或者进入全屏图片\n选中 Page Block 时，Ctrl + Shift + R：重命名这个 Page\n选中 Image Block 时，空格键：进入图片全屏浏览\n\n格式方面\n由于上面这些调整，再加上没有预览界面，使得在 Notion 中使用 Markdown 标记时显得不够友好。所以学会使用快捷键就变得很有必要了，我建议每一位 Norion 用户都熟练掌握这几个改变文字样式的快捷键。\n\nCtrl + B：加粗文字\nCtrl + I：斜体文字\nCtrl + K：添加超链接\nCtrl + E：添加代码格式（同时变为等宽字体）\nCtrl + Shift + S：添加删除线\n\n格式方面的调整，还可以选取文字后用鼠标在工具栏上进行。\n这些快捷键是比较常用的，如果希望学习完整的快捷键，Notion 已经在官方文档中提供了所有的快捷键使用方法，你可以在页面的右下角的 ？ 图标中看到 Tutorial &amp; Guides。\n为何 Notion 要采用 Block 形式？块状 + 动态的设计着实新颖，但越是基础的东西，人的使用习惯越是根深蒂固。这种形式前所未见，它的实际体验究竟如何？\n许多人遇到的第一个问题就是 Notion 的门槛高，与平日用的普通编辑器有太多不一样的地方。比如只支持到二级标题，Markdown 的许多语法不再靠符号来实现（更多的使用快捷键），再一看 Block 之间竟然不允许「跨段落选取」直接劝退……所以给人第一印象可能会比较差，「难用」往往是第一个贴上的标签。\n但只要稍微了解一番快捷键，逐渐适应它的编辑器之后，就会有截然不同的感觉。除了三四级标题仍然无法实现，大多数 Markdown 能做到的功能都能做到。网络服务的加持，让 Notion 的编辑器更是获得了质的提升，许多不曾想过的功能都可以在一个页面中实现。\n那么为什么 Notion 要采用这种形式的编辑器呢？我个人认为有这几个原因：\n\n为了动态页面：Notion 希望展现的内容是动态的，直接采用纯文本或富文本编辑器无法支持这种内容动态显示，排除了使用传统编辑器的可能。\n为了规范文本：如果内容是动态的，就很难保证用户不会在段落内随意插入一些组件（比如代码段里加一个视频文件），引起结构的混乱。需要 Block 来规范文本内容，禁止这种情况的出现。\n为了兼容性：独有格式之所以不受欢迎，是因为不通用，难以导入导出（比如印象笔记的 .enex 格式）。Notion 在这点上选择了完全放弃独有格式，尽可能去兼容 Markdown、Word、Excel 等传统格式。这是出于兼容性和通用性的考虑。\n\n所以，我认为 Notion 的编辑器完全称得上是一款新时代编辑器，为了深度结合网页的动态效果而诞生的动态编辑器。至于 Block，或许只是妥协的产物，是为了兼容老格式而采取的一种措施，可拖动、可排版则是附带的优势。\nDatabase：数据库而非表格这个表格不一般许多人第一眼看到 Notion 的 Database 功能下意识的认为这是表格，但在实际使用时又觉得不是那么一回事。这个表格既不是 Markdown 下那种简陋的字符表格，也不同于 Word 和 Excel 中的多功能表格。\n我们习惯中新建表格时除了方方正正的格子之外别无他物。而 Notion 中的 Databse 不仅可以单独使用，还能添加其他的视图，当做看板、列表甚至是日历来用。感叹表格功能强大之余又有些疑惑，这个表格怎么和我们习惯上的表格差别这么大？\n实际上是数据库实际上，Notion 的 Database 更像是一个数据库，将其理解为「表格」是一种误读。数据都在数据库中，表格只能算是其中的一种表现形式。\nDatabase 可以有 5 类视图：\n\nTable：表格形式，类似于 Airtable 表格，便于做数据统计。每一行都可以单独打开变成一个 Page，添加更多的内容。\nBoard：看板形式，类似于 Trello 看板，便于任务分配、分类。卡片中的选项可以完全由自己定义，看板的分组也可以用选项来改变。\nGallery：画廊形式，便于查看多张卡片中的开头部分，可以在卡片开头添加一些概要内容。\nList：列表形式，便于查看一部分关键性的信息，比如只显示名称和进度，来明确任务的进度。\nCalendar：日历形式，便于查看时间相关的信息，可以在日历上按时间顺序查看任务。\n\n在使用时，Database 有 3 种表现形式，覆盖了大多数可能遇到的情况：\n\nFull Page Databse：整页数据库。就像 Excel 一样，整个页面就是一个数据库。\nInline Database：段落内数据库。则像是在 Word 中插入的表格一样，可以在文章中间放一个表格或是日历。\nCreate Linked Database：连接到现有数据库。同样是在 Word 中插入表格，但内容是调用现有的 Database 中的数据，通过过滤和筛选来使用其中的一部分数据。在文章中修改时，也会对原有的 Database 数据进行修改。\n\n筛选、排序、搜索、隐藏列，一个都不少在右上方，可以对表格内容进行筛选、排序、搜索和隐藏特定列。\n相比在 Word 中做表格，在 Notion 文章内的表格同样具备完整的功能，使用体验高度一致。\nImport：导入全类型文档不过，正是因为 Notion 的设计如此超前，最初使用 Notion 的用户常常会一头雾水，冒出许多问题：「为什么在 Pages 里还能再新建一个 Pages？编辑的时候怎么是一块一块的？这是 Markdown 还是富文本？」……这种对工具的陌生感发生在我身边的许多人身上。\n相信许多人在认识 Notion 之前，已经有一部分文档了。为了减少从头学起的陌生感，我们可以先从历史文档中导入一部分，然后逐渐深入。\n你可以在空白 Page 中选择 Import，也可以在右上角的「…」中选择 Import 来导入文档。\nNotion 的导入支持 5 种基础格式： TXT、Markdown、CSV（Excel）、Word、HTML，以及 7 种服务：Trello、Asana、Google Docs、Dropbox Paper、Quip、Evernote、Workflowy。由此可见，Notion 主要支持的文件类型是纯文本、富文本、表格、列表，以及 Trello 独有的看板，支持批量导入。\n除了不支持 PPT 和 PDF 导入之外，该有的导入功能都有了。当然，你也可以把 PPT 和 PDF 作为附件添加在页面中。\n导入之后也先别急着高兴，Notion 尽可能地对多种格式进行了兼容，但对 Markdown 和 Word 格式仍然有一定的要求，主要表现为「Markdown 的双回车换行」和「Word 大纲级别」等要求，一级标题会变成 #，二级和更高的标题级别都会变成 ##。\n如果你的文档格式一团糟，Notion 是无法识别的。如果遇到了这种问题，可以通过转换工具格式化一下，用更标准的 Markdown 导入。\nTemplate：组合无限可能Notion 的开发团队在官方帮助文档中提到了这样一句话：使用数据库的最大障碍是想象力。\n\nThe biggest hurdle when it comes to using databases is one of imagination.\n\n没错，只要合理的使用 Notion 中的各个模块，你就能发现它几乎可以实现无限多的需求。仅仅是官方的内置模板就有 19 种之多，涉及到工作的方方面面。\n这些 Template 不仅制作精美，使用方便，还能起到开拓使用思路的作用。\n这里也有一些实用的模板：\n\n博客文章：利用 Notion 的分栏功能，轻松排版出一篇图文并茂的博客文章。\n每周议程：把一页分栏成五列，分别安排周一到周五的任务。\n阅读清单：在数据库中添加希望阅读的书籍、链接、概述、作者，来督促自己看书、实时记录读书笔记、查阅阅读进度都是不错的选择。\n\n如果你正在初次上手 Notion，我非常建议先去看一看这些模板的使用方法，可以帮助你更快的熟悉它的方方面面。\nWeb：纯网页应用的胜利在这方面，Notion 其实和 Slack 一样，是一个纯网页应用。你会发现网页端的界面和客户端的界面几乎是完全一致的，也就是我们常说的套壳应用。\n纯 Web 应用让 Notion 轻易地完成了全平台客户端的设计，支持 macOS、Windows、Android、iOS，而且优化做的相当不错，实现了完全一致的操作逻辑。在不同系统的设备上登录、写作、排版都有着一致的体验，这在人人都有 2 个以上设备的今天是一件非常重要的事情，有效降低了学习的成本。\n就我个人而言，我很少在手机上大篇幅写作的原因主要是效率低下。手机屏幕小，电脑上轻松完成的排序、加图，手机上都可能要戳好多下才能完成，相当低效。但在 Notion 中就异常高效，在手机上也可以对段落进行拖拽排列，插入附件。而且电脑版跟手机版的显示效果几乎完全一致，当我想到一些细节需要补充时，打开手机就可以直接调整段落顺序、增补内容。\nNotion 的看板功能和 Trello 较为相似，它也能像 Trello 一样实现拖拽管理卡片、添加组员和日期的功能。但和 Trello 相比，Notion 缺少了订阅、归档等团队协作常用的功能。\n目前尚存的一些问题尽管我很喜欢 Notion，有时也不得不承认还有不完善的地方，而且问题还不小，最主要的问题是以下三点：\n\n不支持剪藏：与印象笔记的方向不同，Notion 不以网页剪藏为主要目的。\n不支持自动化：Notion 不支持 IFTTT 等自动化功能，只有一个「打开」的 URL Scheme。\n本地存储功能糟糕：由于是纯 Web 应用，只能通过「导出」把文件存到本地。没有网络时只能查看当前正在编辑，或者近期打开过的少量文档。\n\n那么这三个问题该怎么解决？这里也给出我的建议。\n\n如果你更希望用剪藏，那还是印象笔记类的工具更适合你。\n自动化方面，我目前在同时使用印象笔记和 Notion，一个专门负责剪藏，一个专门产生内容。利用好印象笔记的 API 就可以了，两者其实并不冲突。\n离线问题，在我的使用过程中，我发现彻底没网的情况其实很少，手机 4G 流量也是逐年增多，着急时开个热点其实用不了太多流量。\n\n当然，如果真的经常需要在无网环境下使用，非常重视离线，不离线很多工作无法完成，那就不建议迁移了，有许多笔记应用在这方面做得更好。\n总结Notion 就像是一本精致的手账，它不像论文那么严肃，也不像日记一样随性。比纯文本多了一份个性，比富文本少了一份复杂。既兼容了老的文档，又诞生了新的规则。\n我一直相信，选择工具的关键在于找准工具的特性，Notion 的特性就是兼容性强、功能丰富、整合完善，兼具广度和深度。从简单记事到写作长文，从创建表格到数据仓库，从规范文档到项目管理，种种功能都能在 Notion 中以不同的形式实现。我想，这就是 Notion 的魅力所在。\nNotion 的概念之领先，近乎一款来自未来的工具。在各类工具百花齐放的今天，它依旧能采各家之所长，走出自己的独特道路，实属难能可贵。\n除了任务管理，你可以用 Notion 的看板做点別的事，比如用不同的看板表示家中不同的收纳空间来记录物品位置、或者整理阅读清单等等。\n表格在 Notion 的表格中，每一列的列首决定该列的属性，可选的属性有文字、数字、单选、多选、日期、成员等，你可以利用这些属性中的一个或多个表格内容进行排序和筛选。表格支持简单的数据处理，比如计数、计算时间跨度、加总等。\n表格也贯彻了它「无限层级」的设计理念，表格中的每一行都可以展开为一个空白页，以便补充更多细节内容。\n日历你还可以在 Notion 中插入日历，在相应日期上点击即可添加事件，事件可以发生在一天，也可以通过添加终止时间横跨某一个期间段。\n可惜的是，Notion 的日历不支持与第三方服务同步，也不能订阅，它的用途更多是作为笔记中的时间索引，帮你更好地将一个时间段内的任务串联起来。\n值得一提的是，表格、看板和日历功能在 Notion 不是相互独立的三部分，它们可以相互进行转换，为一个项目提供不同的视角。\n只要点击左上角的「view」，都可以将当前视图转换成另两种视图。举个例子，当你将一个表格转换成看板视图后，表格中的每一行都会转换成看板中的一张卡片，看板视图中的变化与表格是联动的，如果你在看板视图中将一张 Tag 为「iOS」的卡片拖到了「Android」群组，该张卡片的属性会变成「Android」，在日历视图中亦然。\n关联阅读：Notion 使用详解：来自未来的笔记协作工具\n实用模版要说谁最了解 Notion，那么答案肯定是它自己。Notion 提供了涵盖了从个人生活到团队协作等各方面的模板，对 Notion 功能也应用得十分深入，方便我们可以直接套用。\n&gt; Notion 官方模版库\n个人/团队主页：Personal/Team Home如果你想将 Notion 打造为自己的工作区，你肯定希望所有页面都能井井有条地整理好，在你需要时，可以迅速找到特定页面。这时候，一个可以将所有页面分门别类放置好的主页显得尤为重要。\nNotion 官方为我们分别准备了 个人主页 和 团队主页 的模板，我们可以参照它来布局自己的 Notion 主页。\n这个模板的原理并不复杂，仅仅是用标题（Header）和页面（Page）将不同类别的页面归纳好，让你的工作区变得更有条理。主页模板的用法也非常简单，只要按照一定的格式将页面整理好，就能得到一个井井有条的主页。\n追踪游戏进度：Video Game TrackerVideo Game Tracker 是一款来自社区的优秀模板，它可以用于追踪游戏的进度。除了游戏外，你也可以用它来追踪正在看的电影、书籍。随着《复仇者联盟 4：终局之战》的上映，不妨用这个模板来追踪自己补电影的进度。\n要在画廊中添加内容，只要点击右上角的「新建」（New），随后在弹出的窗口中填写游戏所在的平台、价格等信息即可完成将卡片收入画廊。如果你想用它来追踪阅读进度，也可以通过「添加类目」（Add a Property）来自定义模板。\n这个模板用到了 Notion 的「画廊」（Gallery）功能，它可以让我们快速查看多张卡片的概要内容。配合封面图，你可以一目了然地分辨出不同卡片的内容。画廊也支持添加过滤选项，我们可以把所有卡片按照特定的规则筛选出来。你可以在画廊右上角的菜单键中找到「过滤器」（Filter）的选项，并创建自己的过滤规则。\n人际关系管理：Intentional Relationship Aid在当今社会，人与人之间的关系逐渐疏远。我们的微信里添加了许多好友，可真正有交集的却寥寥无几。Intentional Relationship Aid 是用于管理人际关系的一个模板，它可以帮助我们清晰地查看到自己与好友的互动情况。\n这个模板用到了 Notion 的表格（Table）及函数功能（Formula），表格可以让我们清晰地看到所有好友的姓名、关系和联系频率等信息。每一行代表一个好友，点击好友名称即可打开一个单独的页面，你可以在这里添加好友的联系方式或是照片。\n这个模板还通过函数做出了「近期联系的可能性」及「多久联系一次」的推算，它将根据你为好友设置的联系频率和上次联系时间进行运算。作者将具体函数放在了模板中，你可以查看并根据自己的需求进行修改。\n个人财务管理：Personal FinancesPersonal Finances 是一款个人财务管理的模板。你不需要拥有相关知识，只需要按照自己的需求对它的内容进行简单修改，就能得到一个自己的财务管理页面。\n这个模板分为三个部分：\n\n文字信息：用于放置消费目标、超支金额等文字内容。\n消费流水：以日历形式呈现每日的消费流水，可以清晰查看到消费内容与金额。\n每月消费：以看板形式呈现每月消费，可以根据分类进行过滤筛选。\n\n你可以随意修改文字信息，用它来做一个简单的消费计划。要添加消费流水，只需要点击日历右上角的「添加」，随后填入金额、日期等信息即可。你还可以选择消费的方式，比如订阅、预付费或是一次性付费。\nPersonal Finances 模板用到了日历（Calendar）及看板（Board）功能，让我们可以通过不同的方式查看到自己的消费情况。即使你不需要进行财务管理，也可以学习它的思路，打造一个集合日历与看板的任务管理工具。\n目标进程追踪：OKRsOKR（Objectives and Key Results，即目标与关键成果法）是用于跟踪目标的工作法，许多团队都会用它来明确自己的目标及关键成果。OKRs 就是根据 OKR 工作法所制作的 Notion 模板。\nOKRs 通过行内表格的方式来实现目标管理，点击项目名称即可设置目标的参数。设置完成后，你可以在表格中看到当前的数值和完成进度，你也可以随时修改当前数值，进度会自动随之改变。\nOKRs 比较亮眼的一点是它用到了模板按钮（Template Button），你只需要点击「添加 OKR」即可快速添加一个新的表格，而不用从头创建新的表格。模板按钮可以用于快速创建模板化的内容，十分方便。\n看板式任务管理：Tasks and IssuesTasks and Issues 是 Notion 官方提供的一个看板式任务管理模板，如果你用过 Trello 或 Teambition，相信你对这个模板不会陌生。看板式任务管理可以让我们更加清晰地看到每个任务的执行情况。\n这个模板不但支持对任务进行分类管理，还支持多人协作，你可以将任务分配给相应的同事。此外，你也可以通过自带的过滤器来筛选出分配给自己的任务。你也可以将其打造成自己的任务管理系统，时刻追踪任务完成情况。\n在看板的时间设置中，你也可以添加提醒，让自己不再错过重要的任务。\n会议记录：Meeting NotesMeeting Notes 是一个会议记录的模板，它将以列表的形式把会议记录整理起来，你可以清晰地看到与具体会议相关的人员、部门。每一个会议都是一个单独的页面，你可以在页面中进行会议记录和归纳。\n会议记录同样支持过滤，你可以按照部门、时间等条件筛选出符合规则的记录。除了套用这个模板进行会议记录外，我们也可以在这个模板的范例里学习到一些会议记录的方式和技巧。\n除了 Notion 官方模版库，也有用户为 Notion 建立了第三方模版库。如果你想找到更多关于 Notion 的实用模版，可以阅读我们之前的介绍文章：\n&gt; 用好这些实用模板，把 Notion 打造成全能助理\n工具实例如果在了解 Notion 的基础功能以及模版之后，你仍然不知道能用 Notion 做什么事，不妨跟着下面几个实例实现几个实用小工具，学习其他人的 Notion 使用思路和技巧。\n打造个性化 Notion 进度条先来试试用 Notion 实现展示年时间进度条的工具，在这个实例中，我们需要用到计算日期已经过去多久的函数，整个进度条是由十个方块■组成，一个方块■代表10%，0 – 10% 就占一个方块■，11% – 20% 就占两个方块■■，以此类推。\n比如，今年已经过去 180 天，经过计算，我们可以得出今年已经走完了 180 / 365 = 49%，49% 在 41% – 50% 之间，占用五个方块，显示效果为「■■■■■ 49%」。\n关联阅读：Notion 还能这么玩：手把手教你打造个性化进度条\n学会使用 Notion 分栏虽然说是介绍 Notion 分栏功能使用场景的实例，但是这里还会介绍更多串联 Database 一些 Notion 用法，能够帮助你真正地在实际使用过程中用好这项功能。\n在 Notion 分栏功能的使用实例中，你会了解到这些内容：\n\n丰富内容排版，让文章增添一些「生气」：\n\n系统性地整合视频的笔记内容以及与多人协作翻译文档：\n总而言之，你只需要将 Notion 想象成积木一样，你可以自由地组合其中的内容，组合它为你提供的各种 Block，这些小工具的实现其实没有你想的那么难。\n关联阅读：你也可以做出好看的排版：三个场景玩转 Notion 分栏\n制作个人数据库，管理订阅服务这个小工具利用了 Notion 的数据库功能，让我们通过制作一个小工具，方便地管理我们的订阅服务，以便及时取消不需要的服务或者进行续费。\n通过学习这个实例，你可以了解到这些内容：\n\n从零开始制作订阅服务管理库，包含激活码管理、素材教程管理、续费提醒功能等。\n快速组织个人电脑配置清单。\nNotion Database 基础使用教程。\nNotion Database 模板使用教程。\nNotion formula 实践。\n\n当然，这个小工具只是作为一个 Notion 使用思路的参考，你也可以利用 Notion 的数据库功能实现其它需求，比如：\n\n管理服务器、SSL 到期、物品打折提醒等。\n集合笔记，方便随时管理。\n制作 CRM、邮寄清单。\n借助 Notion 便捷的协作分享功能，提高不会编程的用户的效率。\n……\n\n关联阅读：避免多花冤枉钱，用 Notion 管理你的订阅服务\n从功能介绍到应用实例，不知道你学会如何使用 Notion 了吗？如果你想了解更多关于 Notion 的使用方法和技巧，欢迎阅读少数派为你准备的 Notion 专题：\n🔗 如何玩转 Notion\n","slug":"article/第3篇-notion上手推荐","date":"2020-09-21T14:14:29.000Z","categories_index":"记录点滴生活文章","tags_index":"","author_index":"Narges"},{"id":"f241c5cc0842d8c140995c7486967900","title":"第2篇 更新博客遇到的坑","content":"头都大了，上传了之后只显示一小部分更改。\n","slug":"article/第2篇-更新博客遇到的坑","date":"2020-09-08T14:14:29.000Z","categories_index":"记录点滴生活文章","tags_index":"","author_index":"Narges"},{"id":"6e0542f41f448420f29dd77da71eba6b","title":"第1篇 记录博客网站搭建","content":"\n创建博客缘由新奇的事物总是能给人带来惊喜，我超爱的！！！博客作为互联网时代初期的产物，听上去现在是有些老古董了，可是这也太好玩了吧！！！而且他有着独特的味道，想一想几年之后翻看博客，一篇篇文章条理清晰，脉络框架完整，还不用担心那一天就会被和谐，虽然互动很少，但是能沉下心来看的，便是知己，这可比某些社交平台好多了，现在的网络喷子啊，以前是小米加步枪，现在是加特林，哒哒哒。有时候一天好心情就没有了，可恶啊。可惜之后便被后浪打翻在地，移动设备终端的普及，社会节奏的加快，至少在我印象中，身边使用博客的几乎没有。相比较于现在流行的微博、微信之类的，我更喜欢慢一点的节奏，慢下来才能去思考，你如果仍然试图通过互联网来寻求表达思想、帮助思考，依然会愿意认真对待言论的话，那么你需要去减少阅读、撰写短内容而尝试长内容，因为碎片化的知识始终无法取代系统化的学习。\n博客搭建过程 之前也尝试过博客的搭建，可是由于太过于繁琐，（主要还是懒，一个拖延症晚期，这篇文章拖了半个月）这几天在网上学习白嫖云函数（云函数超棒的！每天白嫖很快乐啊），偶然间在CDSN上面看到了一篇文章关于了Hexo搭建博客的过程，相逢恨晚啊，恨晚！！！一看日期还是15年的时候就已经发布了，优秀的人太多了，吾辈当自强。\n博客的搭建其实现在网上的资源已经足够多了了，我真的不敢班门弄斧，大家所欠缺的只是一点点思路，而我刚好能能帮你们节省一点鼠标耐久度，就放几个我在搭建过程中参考的链接，里面写的超级详细，实际操作起来行云流水，我试过了是没有什么问题的。\n\nGit和Node的蓝奏云链接          密码:5qkz（节省大家去网站上下载的时间）\n\n史上最详细的Hexo博客搭建图文教程\n\nhexo+github搭建个人博客(超详细教程)\n\nhexo干货系列：（一）hexo+gitHub搭建个人独立博客\n\ngit - 简明指南\n\n\n:::note info强烈吐槽：搭建博客千万不要放到github上面去，可以放但是没必要，放了也需要jsDelivr加速，这玩意至少我现在还没弄懂。我一开始就是放在github上面，可是打开很慢，有的时候还会链接打不开（404警告），推荐国内的代码存放仓库，比如conding.me（码云）之类的，如果你不小心已经上传到了github，没关系下面还会有教程帮助你换仓库的。:::\n主题的选择 Hxeo官方主题仓库存放了相当多的主题了，各种类型的都有，下载使用也很简单，还有一些民间大神的主题安装教程，不怕你不喜欢，就怕太多你挑不过来，小孩子才做选择，大人我全都要。\n\nHxeo官方主题\n\nhexo干货系列：（二）hexo主题下载及配置\n\nHexo 主题 Shoka &amp; multi-markdown-it 渲染器使用说明我的这个主题是在仓库里面找到的一个，链接就是这个安装方法在他的主页上面也有。我现在还不太会，后期会逐步修改，可不能抄袭。学不会~学不会:::note info选主题的时候要慎重，虽然说之后你还是可以修改主题，可是随着你发布的文章越来越多，之后修改起来的难度也会越来越大，而且作为新手，在前期我连代码都看不懂，只能看一步做一步，然后在给自己备注一下，后悔当初怎么就没有好好学英语呢！！！现在看代码都是用有道云去翻译，作孽啊。:::\n域名的选择我是直接去阿里云上面买的，理由就是阿里云可以用支付宝直接登录，不需要多余的注册，过程也很简单，但是有一点要注意，购买域名需要实名认证及审核，我差不多是网上8点提交申请12点审核通过。在域名里面，com、cn、选这种知名的买就对了，我买的是top，理由就是便宜，我一个个人博客还能有啥高贵的，有钱的大佬可以考虑一下去买一个gov。 \n\n阿里云:::note info买域名千万不要被首年的价格诱惑，注意看看10年价格是多少，有的首年便宜后面老贵了，不过就是有一点，我也不知道能不能活过10年，万一没到那不就是亏了。:::\n\n\n网站的搬迁与发布 之前我的仓库是在github上面，后来搬到了coding.me上面，反正都不要钱，为什么不白嫖呢。\n\n将 Hexo 博客部署到 Coding（码云）\n最安全的 hexo 多电脑同步博客解决方案–非新建分支:::note info部署到coding的博客可以获得https的ssl安全证书，都不用申请超级方便，没有证书的话，在网址那里会显示不安全的链接。:::结语博客的搭建和资料的查询共花费3天时间，主要还是主题的修改占用了大部分时间。这里就记录一下，为自己之后搭建别的做个准备，不用再很麻烦，同时希望自己可以保持初心，继续前进，也祝愿文章前的你，可以不断进步，成为一个优秀的人。永远相信美好的事情即将发生\n\n","slug":"article/第1篇 记录博客网站搭建","date":"2020-08-27T05:20:52.000Z","categories_index":"记录点滴生活文章","tags_index":"Hexo,教程,主题","author_index":"Narges"},{"id":"7d1833db100794b0e4d1bde9695ae150","title":"设计","content":"到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受\n\n","slug":"design/炉石传说","date":"2020-08-27T05:20:52.000Z","categories_index":"日常工作设计成果","tags_index":"设计","author_index":"Narges"},{"id":"a42a852d552ec7befda956deba06090c","title":"电影","content":"到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受","slug":"film/炉石传说","date":"2020-08-27T05:20:52.000Z","categories_index":"优秀电影推荐及赏析","tags_index":"电影","author_index":"Narges"},{"id":"90ee875bac4841099f5ceb21ea648776","title":"炉石传说","content":"到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受还是我的华盛顿\n\n\n到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受还是我的华盛顿\n到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受还是我的华盛顿到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受还是我的华盛顿到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受还是我的华盛顿到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受还是我的华盛顿","slug":"game/炉石传说","date":"2020-08-27T05:20:52.000Z","categories_index":"游戏","tags_index":"脚本,炉石传说","author_index":"Narges"},{"id":"307269b752b43fa37a164a6abb362dc6","title":"插画","content":"到现在只写了第一篇在点滴文章记录里面，传送门链接我还不会做，难受","slug":"inbetweening/炉石传说","date":"2020-08-27T05:20:52.000Z","categories_index":"美术学场景及人物绘制","tags_index":"插画","author_index":"Narges"},{"id":"9fe5929d8f29a98c0d27363029b33e62","title":"JS第1周","content":"什么是语言\n计算机就是一个由人来控制的机器,人让它干嘛,它就得干嘛。\n\n我们要学习的语言就是人和计算机交流的工具，人类通过语言来控制、操作计算机。\n\n编程语言和我们说的中文、英文本质上没有区别,只是语法比较特殊。\n\n语言的发展:\n–纸带机:机器语言\n–汇编语言:符号语言\n–现代语言:高级语言\n\n\n起源\nJavaScript诞生于1995年,它的出现主要是用于处理网页中的前端验证。\n\n所谓的前端验证,就是指检查用户输入的内容是否符合一定的规则。\n\n比如:用户名的长度,密码的长度,邮箱的格式等。\n\n\n简史\nJavaScript是由网景公司发明,起初命名为LiveScript ,后来由于SUN公司的介入更名为了JavaScript.\n1996年微软公司在其最新的IE3浏览器中引入了自己对Javascript的实现JScript.\n于是市面上存在两个版本的JavaScript,一个网景公司的JavaScript和微软的JScript.\n为了确保不同的浏览器上运行的JavaScript标准一致,所以几个公司共同定制了JS的标准名命名为ECMAScript.\n\n时间表\n\n\n年份\n事件\n\n\n\n1995\n网景公司开发了JavaScript\n\n\n1996\n微软发布了和JavaScript兼容的JScript\n\n\n1997\nECMAScript 第1版 ( ECMA-262)\n\n\n1998\nECMASCript第2版、DOM Level1的制定、新型语言DHTML登场\n\n\n1999\nECMAScript第3版\n\n\n2000\nDOM Level2的制定\n\n\n2002\nISO/ IEC 16262:2002的确立\n\n\n2004\nDOM Level3的制定\n\n\n2005\n新型语言AJAX登场\n\n\n2009\nECMAScript第5版、新型语言HTML5登场\n\n\n实现\n\n\n浏览器\nJavascript实现方式\n\n\n\nFireFox\nSpiderMonkey\n\n\nInternet Explorer\nJScript/Chakra\n\n\nSafari\nJavaScriptCore\n\n\nChrome\nv8\n\n\nCarakan\nCarakan\n\n\n\n我们已经知道ECMAScript是JavaScript标准,所以一般情况下这两个词我们认为是一个意思。\n但是实际上JavaScript的含义却要更大一些。\n一个完整的JavaScript实现应该由以下三个部分构成:\n\n特点JS的特点\n\n解释型语言\n类似于C和Java的语法结构\n动态语言\n基于原型的面向对象\n\n实操alert()//控制浏览器弹出一个警告框\ndocument. write ()//让计算机在页面中输出一个内容\nconsole.1og()//向控制台输出一个内容\n","slug":"programme/JS第1周","date":"2020-08-27T05:20:52.000Z","categories_index":"程序汇编语言","tags_index":"编程,JaveScript","author_index":"Narges"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"代码位置放置于网页&lt;head/head&gt;之内(推荐)例如：可以将js代码编写到script标签\n&lt;!DOCTYPE html>\n&lt;html>\n    &lt;head>\n        &lt;meta charset=\"UTF-8\">\n        &lt;title>&lt;/title>\n        &lt;!--JS代码需要编写到Script标签中-->\n        &lt;script type=\"text/javascript\">\n        \n         \n        &lt;/script>\n    &lt;/head>\n    &lt;body>\n    &lt;/body>\n&lt;/html>\n\n例如：以将js代码编写到外部js文件中,然后通过script标签引，写到外部文件中可以在不同的页面中同时引用,也可以利用到浏览器的缓存机制，推荐使用的方式\n&lt;!DOCTYPE html>\n&lt;html>\n    &lt;head>\n        &lt;meta charset=\"UTF-8\">\n        &lt;title>&lt;/title>\n        &lt;!--JS代码需要编写到Script标签中-->\n        &lt;script type=\"text/javascript\" src=\"js/script.js\">&lt;/script>\n        &lt;/script>\n    &lt;/head>\n    &lt;body>\n    &lt;/body>\n&lt;/html>\n\n\n\n放置于网页&lt;body/body&gt;之内（不推荐）例如：可以将js代码编写到标签 onclick属性中，1当我们点击按钮时, Js代码才会执行\n&lt;!DOCTYPE html>\n&lt;html>\n    &lt;head>\n        &lt;meta charset=\"UTF-8\">\n        &lt;title>&lt;/title>\n    &lt;/head>\n    &lt;body>\n          &lt;button onclick=\"alert('11111');\">点我一下 &lt;/button>  \n    &lt;/body>\n&lt;/html>\n\n例如：,可以将js代码写在超链接的href属性中,这样当点击超链接时,会执行js代码\n&lt;!DOCTYPE html>\n&lt;html>\n    &lt;head>\n        &lt;meta charset=\"UTF-8\">\n        &lt;title>&lt;/title>\n    &lt;/head>\n    &lt;body>\n          &lt;a href=\"javascript: alert('2222222');\">网页显示的文本&lt;/a>\n    &lt;/body>\n&lt;/html>\n\n基本语法注释//单行注释    \n\n/*\n*多行注释   *号有没有没关系，为了美观\n*/\n\n大小写alert(\"可运行\");\nAlert(\"不可运行\");\n\n以(;)结尾\n如果不写分号,浏览器会自动添加,但是会消耗一些系统资源,\n有些时候,浏览器会加错分号\n\n空格和换行\njs中会忽略多个空格和换行,所以我们可以利用空格和换行对代码进行格式化（美观）\n\n字面量和变量字面量都是一些不可改变的值\n比如：12345\n字面量都是可以直接使用,但是我们一般都不会直接使用字面量\n变量变量可以用来保存字面量,而且变量的值是可以任意改变的\n变量更加方便我们使用,所以在开发中都是通过变量去保存一个字面量,而很少直接使用字面量\n赋值通过var为变量赋值\nvar b = 100\n\n通过let为变量赋值\nlet b = 100\n\n标识符\n在JS中所有的可以由我们自主名的都可以称为是标识符\n\n例如:变量名、函数名、属性名都属于标识符\n\n命名一个标识符时需要遵守如下的规则:\n\n标识符中可以含有字母、数字、_、$\n\n标识符不能以数字开头\n\n标识符不能是ES中的关键字或保留字\n\n标识符一般都采用驼峰命名法\n首字母小写,每个单词的开头字母大写,其余字母小写\nhelloworld     xxxYyyzzz\n\n\n\nJS底层保存标识符时实际上是采用的Unicode编码\n所以理论上讲,所有的utf-8中含有的内容都可以作为标识符\n中文可以用，但是没必要，不推荐使用。\n\n\n关键词\n\n\n\n\n\n\n\n\n\n\nbreak\ndo\ninstanceof\ntypeof\ncase\n\n\nelse\nnew\nvar\ncatch\nfinally\n\n\nreturn\nvoid\ncontinue\nfor\nswitch\n\n\nwhile\ndefaul\nif\nthrow\ndelete\n\n\nin\ntry\nfunction\nthis\nwith\n\n\ndebugger\nfalse\ntrue\nnull\n\n\n\n保留字符\n\n\n\n\n\n\n\n\n\n\nclass\ninterface\npackage\nprivate\npublic\n\n\nyield\nenum\nextends\nlet\nimplements\n\n\nexport\nimport\nsuper\nprotected\nstatio\n\n\nconst\n\n\n\n\n\n\n\n\n\n\n\n\n\n数据类型string  Number  Boolean  Null  Undefined  属于基本数据类型\nObject属于引用数据类型\nString字符串\n在JS中字符串需要使用引号引起来\n\n使用双引号或单引号都可以,但是不要混着用\n\n引号不能嵌套,双引号不能放双引号,单引号不能放单引号\n例如\nvar str = 'hello';\nstr= '我说:\"今天天气真不错! \"'\nconsole.log(str);\n\n在字符串中我们可以使用\\作为转义字符\n\n当表示一些特殊符号时可以使用\\进行转义\n&quot;表示”\n&#39;表示’\n\\n表示换行\n\\t制表符\n\\表示\\\n\n\n\nNumber数值在JS中所有的数值都是Numper类型\n包括整数和浮点数(小数)\njs中可以表示的数字的最大值\n\nNumber.MAX_VALUE      =      1.7976931348623157e+308\n\nNumber.MIN VALUE        =      5e-324\n\n\n如果使用Number表示的数字超过了最大值,则会返回一个\n\n Infinity表示正无穷\n-Infinity表示负无穷\n\n使用typeof检查Infinity也会返回number\n\nNaN是一个特殊的数字,表示Not A Number\n\n使用typeof检查一个NaNt会返回number\n\n\n可以使用一个运算符typeof来检查一个变量的类型: typeof 变量\n\n检查字符串时,会返回string\n\n检查数值时,会返回number\n\n\n如果使用JS进行浮点运算可能得到一个不精确的结果所以千万不要使用JS进存对精确度要求比较高的运算\nBoolean布尔值布尔值只有两个,主要用来做逻辑判断\n\ntrue-表示真\nfalse-表示假\n\n用typeof检查—个布尔时, 返回boolean\nNull（空值）Nu11类型的值只有一个,就是null\nnu1l这个值专门用来表示一个为空的对象\n使用typeof检查一个nul1值时,会返回object\nUndefined（未定义）Undefined (未定义)类型的值只有一个, 就undefind\n当声明一个变量,但是并不给变量赋值时,它的值就是undefind\n使用typeof检查一个undefined时，会返回undefined\nObject对象","slug":"programme/JS第2周","date":"2020-08-27T05:20:52.000Z","categories_index":"程序汇编语言","tags_index":"编程,JaveScript","author_index":"Narges"},{"id":"0103e7be586839d57632445c97ce5ca0","title":"第1篇 CleanUpWeChatZombieFans分析笔记","content":"目的===\n通过对&lt;清理微信僵尸粉.js&gt;脚本的分析，了解其运行原理，补充相关JS知识点。\n第一周匿名函数（（）=&gt; {} ）、(function(){})标准的函数，没有赋值给任何变量，没有名字的函数，叫匿名函数.主要是利用函数内的变量作用。避免产生全局变量，影响整体页面环境，增加代码的兼容性。因为没有名字，所以在定义完成就要调用，（（）=&gt; {} ）（），后面的（）是调用运行这个匿名函数的意思.\n","slug":"programme/第1篇 CleanUpWeChatZombieFans分析笔记","date":"2020-08-27T05:20:52.000Z","categories_index":"程序汇编语言","tags_index":"编程,JaveScript","author_index":"Narges"}]